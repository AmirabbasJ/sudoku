import type { Board } from '@sudoku/core';

const emptyBoard: Board = [
  [
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
  ],
  [
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
  ],
  [
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      ['', '', ''],
    ],
  ],
];
const sampleBoard: Board = [
  [
    [
      ['', 6, 8],
      ['', '', 1],
      ['', '', ''],
    ],
    [
      [1, '', 9],
      ['', '', ''],
      ['', 3, 8],
    ],
    [
      ['', '', ''],
      [8, '', 4],
      ['', 9, 1],
    ],
  ],
  [
    [
      [2, 5, ''],
      ['', '', ''],
      ['', '', ''],
    ],
    [
      ['', '', ''],
      ['', '', ''],
      [4, 2, 5],
    ],
    [
      ['', 4, ''],
      ['', 5, ''],
      [9, 1, 6],
    ],
  ],
  [
    [
      ['', 4, ''],
      ['', '', 2],
      ['', '', 5],
    ],
    [
      ['', 6, 1],
      [7, 5, ''],
      ['', '', 3],
    ],
    [
      ['', '', 5],
      [1, 8, ''],
      ['', '', ''],
    ],
  ],
];

export const getLoadingBoard: () => Board = () => emptyBoard;
export const getBoard = async () => {
  await new Promise((resolve, reject) => {
    setTimeout(resolve, 200);
  });
  return sampleBoard;
};
const solvedSampleBoard: Board = [
  [
    [
      [3, 6, 8],
      [5, 9, 1],
      [7, 2, 4],
    ],
    [
      [1, 4, 9],
      [6, 7, 2],
      [5, 3, 8],
    ],
    [
      [5, 7, 2],
      [8, 3, 4],
      [6, 9, 1],
    ],
  ],
  [
    [
      [2, 5, 9],
      [4, 1, 6],
      [8, 7, 3],
    ],
    [
      [3, 1, 6],
      [9, 8, 7],
      [4, 2, 5],
    ],
    [
      [7, 4, 8],
      [2, 5, 3],
      [9, 1, 6],
    ],
  ],
  [
    [
      [9, 4, 7],
      [6, 3, 2],
      [1, 8, 5],
    ],
    [
      [8, 6, 1],
      [7, 5, 4],
      [2, 9, 3],
    ],
    [
      [3, 2, 5],
      [1, 8, 9],
      [4, 6, 7],
    ],
  ],
];
